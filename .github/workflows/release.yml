name: Build and Release

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-flatpak:
    runs-on: ubuntu-latest
    container:
      image: bilelmoussaoui/flatpak-github-actions:gnome-47
      options: --privileged
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Build Flatpak
      uses: bilelmoussaoui/flatpak-github-actions/flatpak-builder@v6
      with:
        bundle: minecraft-server-manager-gtk.flatpak
        manifest-path: io.github.fernandomema.minecraft-server-manager-gtk.yml
        cache-key: flatpak-builder-${{ github.sha }}

    - name: Upload Flatpak artifact
      uses: actions/upload-artifact@v4
      with:
        name: minecraft-server-manager-gtk-flatpak
        path: minecraft-server-manager-gtk.flatpak

  build-appimage:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y python3 python3-gi python3-yaml gir1.2-gtk-3.0

    - name: Build AppImage
      run: |
        chmod +x build-appimage.sh
        ./build-appimage.sh

    - name: Upload AppImage artifact
      uses: actions/upload-artifact@v4
      with:
        name: minecraft-server-manager-gtk-appimage
        path: minecraft-server-manager-gtk-x86_64.AppImage

  create-release:
    needs: [build-flatpak, build-appimage]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Generate version tag
      id: version
      run: |
        # Get the current date and time for version
        VERSION=$(date +"%Y.%m.%d-%H%M")
        echo "version=v$VERSION" >> $GITHUB_OUTPUT
        echo "Generated version: v$VERSION"

    - name: Download Flatpak artifact
      uses: actions/download-artifact@v4
      with:
        name: minecraft-server-manager-gtk-flatpak

    - name: Download AppImage artifact
      uses: actions/download-artifact@v4
      with:
        name: minecraft-server-manager-gtk-appimage

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.version.outputs.version }}
        release_name: Minecraft Server Manager ${{ steps.version.outputs.version }}
        body: |
          ## Minecraft Server Manager GTK - Automated Release

          **🎮 Features:**
          - GTK-based Minecraft server management
          - Server creation and management  
          - Plugin management with Modrinth integration
          - Real-time console output
          - Configuration file editor

          **📦 Installation Options:**

          ### Flatpak (Recommended)
          ```bash
          flatpak install --user minecraft-server-manager-gtk.flatpak
          ```

          ### AppImage (Portable)
          ```bash
          chmod +x minecraft-server-manager-gtk-x86_64.AppImage
          ./minecraft-server-manager-gtk-x86_64.AppImage
          ```

          **⚙️ Requirements:**
          - Linux distribution with GTK 3
          - Python 3.6+
          - PyGObject (python3-gi)
          - PyYAML (python3-yaml)
          - Java 8+ (for running Minecraft servers)

          **🔄 This is an automated release generated from the latest commit to main branch.**
        draft: false
        prerelease: false

    - name: Upload Flatpak to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./minecraft-server-manager-gtk.flatpak
        asset_name: minecraft-server-manager-gtk.flatpak
        asset_content_type: application/octet-stream

    - name: Upload AppImage to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./minecraft-server-manager-gtk-x86_64.AppImage
        asset_name: minecraft-server-manager-gtk-x86_64.AppImage
        asset_content_type: application/octet-stream

    - name: Update latest tag
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git tag -f latest
        git push origin latest --force
